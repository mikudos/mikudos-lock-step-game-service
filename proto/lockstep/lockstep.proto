syntax = "proto3";

package lockstep;

// The greeting service definition.
service LockStepService {
  // Sends a greeting
  rpc SayHello(MHelloReq) returns (MHelloReply) {}
  rpc LoadingProgress(MHelloReq) returns (MHelloReply) {}
  rpc LockStepStream(stream MStepReq) returns (stream MStepRes) {}
}

enum EMessageType {
  Ping = 0;
  ReqMissFrame = 1;
  ReqMissFrameAck = 2;
  HashCode = 3;
  PlayerInput = 4;
  Begin = 5;
  LoadingProgress = 6;
  Leave = 7;
}

enum EResType {
  Pong = 0;
  StepResponse = 1;
  ResMissFrame = 2;
  AllReady = 3;
  ProgressResponse = 4;
}

enum EGameState {
  Idle = 0;
  Loading = 1;
  PartLoaded = 2;
  Playing = 3;
  PartFinished = 4;
  FinishAll = 5;
}

message MGameInput {
  bool IsInputFire = 1;
  int32 SkillId = 2;
  bool IsSpeedUp = 3;
  repeated int32 MousePos = 4;
  repeated int32 InputUV = 5;
}

message MPlayerGameInput {
  int32 ActorId = 1;
  int32 Tick = 2;
  repeated MGameInput Commands = 3;
  bool IsMiss = 4;
}

message MServerFrame {
  int32 Tick = 1;
  repeated MPlayerGameInput PlayerGameInputs = 2;
}

message MMultiFrames {
  int32 StartTick = 1;
  repeated MServerFrame ServerFrames = 2;
}

// The request message containing the user's name.
message MHelloReq {
  EMessageType MsgType = 1;
  string Name = 2;
}

// The response message containing the greetings
message MHelloReply {
  EMessageType MsgType = 1;
  string Message = 2;
}

message MStepReq {
  uint32 ID = 1;
  EMessageType MsgType = 2;
  MPlayerGameInput GameInput = 3;
}

message MStepRes {
  uint32 ID = 1;
  EResType MsgType = 2;
  MMultiFrames Frames = 3;
  MServerFrame Frame = 4;
}